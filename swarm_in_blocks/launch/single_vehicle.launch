<?xml version="1.0"?>


<launch>
    <!-- Posix SITL environment launch script -->
    <!-- launchs PX4 SITL and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="ID" default="0"/>
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.3"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>

    <arg name="output" default="screen"/>

    <!-- vehicle model and config-->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="clover"/>
    <env name="PX4_SIM_MODEL" value="$(arg vehicle)" />
    <env name="PX4_ESTIMATOR" value="$(arg est)" />

    <!-- Gazebo -->
    <arg name="mavlink_tcp_port" value="$(eval 4560 + arg('ID'))"/>

    <!-- MAVROS -->
    <arg name="remote" value="$(eval 14800 + arg('ID'))"/>
    <arg name="local" value="$(eval 15000 + arg('ID'))"/>
    <arg name="fcu_url" default="udp://:$(arg remote)@localhost:$(arg local)"/>

    <!-- PX4 configs -->
    <arg name="daemon" default="true"/>

    <!-- UAV0 -->
    <group ns="clover$(arg ID)">

        <!-- ID parameter -->
        <param name="clover_id" value="$(arg ID)"/>
        
        <!-- Initial position parameters (z initializes in 0.0, not 0.3 because of gazebo ground colision) -->
        <param name="initial_pose/x" value="$(arg x)"/>
        <param name="initial_pose/y" value="$(arg y)"/>
        <param name="initial_pose/z" value="0"/>
        <!-- <param name="initial_pose/z" value="$(arg z)"/> -->

        <!-- generate urdf vehicle model -->
        <arg name="cmd" default="$(find xacro)/xacro 
                                    $(find clover_description)/urdf/clover/clover4.xacro 
                                    main_camera:=true
                                    rangefinder:=false
                                    led:=true 
                                    gps:=true
                                    maintain_camera_rate:=false
                                    use_clover_physics:=false 
                                    mavlink_tcp_port:=$(arg mavlink_tcp_port)"/>

        <!-- PX4 SITL -->
        <arg unless="$(arg daemon)" name="px4_command_arg1" value=""/>
        <arg     if="$(arg daemon)" name="px4_command_arg1" value="-d"/>
        <!-- <node name="sitl_$(arg ID)" pkg="px4" type="px4" output="$(arg output)" args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID)">
            <env name="PX4_SIM_MODEL" value="$(arg vehicle)"/>
            <env name="PX4_ESTIMATOR" value="$(arg est)"/>
        </node> -->
        <node name="sitl_$(arg ID)" pkg="px4" type="px4" output="$(arg output)" args="$(find swarm_in_blocks)/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID)">
            <env name="PX4_SIM_MODEL" value="$(arg vehicle)"/>
            <env name="PX4_ESTIMATOR" value="$(arg est)"/>
        </node>

        <!-- spawn vehicle -->
        <param command="$(arg cmd)" name="urdf_$(arg vehicle)$(arg ID)"/>
        <node name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="$(arg output)" args="-urdf -param urdf_$(arg vehicle)$(arg ID) -model $(arg vehicle)$(arg ID) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

        <!-- MAVROS -->
        <node pkg="mavros" type="mavros_node" name="mavros" clear_params="true" output="$(arg output)">
            <param name="fcu_url" value="$(arg fcu_url)"/>
            <param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
            <param name="target_component_id" value="1"/>
            <param name="gcs_quiet_mode" value="true"/>
            <param name="conn/timeout" value="20"/>

            <param name="local_position/child_frame_id" value="base_link$(arg ID)"/>
            <param name="local_position/tf/child_frame_id" value="base_link$(arg ID)"/>
            <param name="global_position/child_frame_id" value="base_link$(arg ID)"/>
            <param name="global_position/tf/child_frame_id" value="base_link$(arg ID)"/>
            <!-- <param name="setpoint_position/tf/child_frame_id" value="base_link$(arg ID)"/> -->
            <!-- <param name="fake_gps/tf/child_frame_id" value="base_link$(arg ID)"/> -->
            <!-- <param name="setpoint_position/tf/child_frame_id" value="base_link$(arg ID)"/> -->

            <!-- basic params -->
            <rosparam command="load" file="$(find clover)/launch/mavros_config.yaml"/>
            <rosparam param="plugin_whitelist">
                - altitude
                - command
                - distance_sensor
                - ftp
                - global_position
                - imu
                - local_position
                - manual_control
                # - mocap_pose_estimate
                - param
                - px4flow
                - rc_io
                - setpoint_attitude
                - setpoint_position
                - setpoint_raw
                - setpoint_velocity
                - sys_status
                - sys_time
                - vision_pose_estimate
                # - vision_speed_estimate
                # - waypoint
            </rosparam>
        </node>

        <!-- high level led effects control, events notification with leds -->
        <node pkg="clover" name="led_effect" type="led" clear_params="true" output="$(arg output)">
            <param name="blink_rate" value="2"/>
            <param name="fade_period" value="0.5"/>
            <param name="rainbow_period" value="5"/>
            <!-- events effects table -->
            <rosparam param="notify">
                startup: { r: 255, g: 255, b: 255 }
                connected: { effect: rainbow }
                disconnected: { effect: blink, r: 255, g: 50, b: 50 }
                acro: { r: 245, g: 155, b: 0 }
                stabilized: { r: 30, g: 180, b: 50 }
                altctl: { r: 255, g: 255, b: 40 }
                posctl: { r: 50, g: 100, b: 220 }
                offboard: { r: 220, g: 20, b: 250 }
                low_battery: { threshold: 3.6, effect: blink_fast, r: 255, g: 0, b: 0 }
                error: { effect: flash, r: 255, g: 0, b: 0, ignore: [ "[lpe] vision position timeout" ]}
            </rosparam>
        </node>

        <!-- simplified offboard control -->
        <node name="simple_offboard" pkg="clover" type="simple_offboard" output="$(arg output)" clear_params="true">
            <param name="reference_frames/body" value="map"/>
            <param name="reference_frames/base_link" value="map"/>
            <param name="reference_frames/navigate_target" value="map"/>
            <param name="reference_frames/main_camera_optical" value="map"/>

            <param name="body_frame" value="body$(arg ID)"/>
            <param name="target_frame" value="navigate_target$(arg ID)"/>
            <param name="setpoint" value="setpoint$(arg ID)"/>
        </node>

    </group>

</launch>
